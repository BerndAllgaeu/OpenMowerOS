#!/usr/bin/env bash
# CustomPiOS OpenOCD module
# Written by Clemens Elflein
# GPL V3
########

# Source error handling, leave this in place
set -ex

source /common.sh
install_cleanup_trap

echo "Installing OpenOCD dependencys"
apt-get update --allow-releaseinfo-change
apt-get install --yes --no-install-recommends git autoconf automake build-essential pkg-config texinfo libtool libftdi-dev libusb-1.0-0-dev rpi.gpio-common

echo "Installing OpenOCD rp2040-v0.12.0"

# Define cache directory and version identifier
OPENOCD_CACHE_DIR="/tmp/openocd_cache"
OPENOCD_VERSION="rp2040-v0.12.0"
OPENOCD_CONFIG_HASH=$(echo "--enable-ftdi --enable-sysfsgpio --enable-bcm2835gpio --disable-werror" | sha256sum | cut -d' ' -f1 | cut -c1-8)
OPENOCD_CACHE_FILE="${OPENOCD_CACHE_DIR}/openocd-${OPENOCD_VERSION}-${OPENOCD_CONFIG_HASH}.tar.gz"

# Create cache directory
mkdir -p "$OPENOCD_CACHE_DIR"

# Check if we have a cached build and if OpenOCD is already installed
if [ -f "$OPENOCD_CACHE_FILE" ] && [ ! -f "/usr/local/bin/openocd" ]; then
    echo "Found cached OpenOCD build, extracting..."
    if tar -tzf "$OPENOCD_CACHE_FILE" >/dev/null 2>&1; then
        cd /
        tar -xzf "$OPENOCD_CACHE_FILE"
        echo "OpenOCD restored from cache"
    else
        echo "Cache file corrupted, rebuilding..."
        rm -f "$OPENOCD_CACHE_FILE"
    fi
fi

# Check if OpenOCD is now available, if not build from source
if ! command -v openocd >/dev/null 2>&1; then
    echo "OpenOCD not found, compiling from source..."
    
    # Build from source
    git clone https://github.com/raspberrypi/openocd.git --recursive --branch rp2040-v0.12.0 --depth=1
    cd openocd
    ./bootstrap
    ./configure --enable-ftdi --enable-sysfsgpio --enable-bcm2835gpio --disable-werror
    make -j$(nproc)
    make install
    cd ..
    
    # Cache the installation if it was successful
    if command -v openocd >/dev/null 2>&1; then
        echo "Caching OpenOCD build for future use..."
        tar -czf "$OPENOCD_CACHE_FILE" \
            -C / \
            usr/local/bin/openocd \
            usr/local/share/openocd \
            2>/dev/null || echo "Warning: Some OpenOCD files not found for caching"
        echo "OpenOCD build cached to: $OPENOCD_CACHE_FILE"
    else
        echo "Error: OpenOCD installation failed"
    fi
    
    # Clean up source
    rm -rf openocd
else
    echo "OpenOCD already available, skipping build"
fi

# Verify OpenOCD installation
echo "Verifying OpenOCD installation..."
openocd --version || echo "Warning: OpenOCD installation verification failed"



#cleanup
apt-get clean
apt-get autoremove --yes
